# VSCode to DAP Debugger - Complete Exchange for Disassemble

## 1. Initialize Request
VSCode -> Debugger:
{
  "seq": 1,
  "type": "request",
  "command": "initialize",
  "arguments": {
    "clientID": "vscode",
    "clientName": "Visual Studio Code",
    "adapterID": "cppdbg",
    "pathFormat": "path",
    "linesStartAt1": true,
    "columnsStartAt1": true,
    "supportsVariableType": true,
    "supportsVariablePaging": true,
    "supportsRunInTerminalRequest": true,
    "locale": "en-US",
    "supportsProgressReporting": true,
    "supportsInvalidatedEvent": true,
    "supportsMemoryReferences": true,
    "supportsArgsCanBeInterpretedByShell": true,
    "supportsMemoryEvent": true,
    "supportsStartDebuggingRequest": true
  }
}

## 2. Initialize Response
Debugger -> VSCode:
{
  "seq": 1,
  "type": "response",
  "request_seq": 1,
  "success": true,
  "command": "initialize",
  "body": {
    "supportsConfigurationDoneRequest": true,
    "supportsFunctionBreakpoints": true,
    "supportsConditionalBreakpoints": true,
    "supportsHitConditionalBreakpoints": true,
    "supportsEvaluateForHovers": true,
    "exceptionBreakpointFilters": [
      {
        "filter": "all",
        "label": "All Exceptions",
        "default": false
      }
    ],
    "supportsStepBack": false,
    "supportsSetVariable": true,
    "supportsRestartFrame": false,
    "supportsGotoTargetsRequest": true,
    "supportsStepInTargetsRequest": true,
    "supportsCompletionsRequest": true,
    "supportsModulesRequest": true,
    "additionalModuleColumns": [],
    "supportedChecksumAlgorithms": [],
    "supportsRestartRequest": true,
    "supportsExceptionOptions": true,
    "supportsValueFormattingOptions": true,
    "supportsExceptionInfoRequest": true,
    "supportTerminateDebuggee": true,
    "supportSuspendDebuggee": true,
    "supportsDelayedStackTraceLoading": true,
    "supportsLoadedSourcesRequest": true,
    "supportsLogPoints": true,
    "supportsTerminateThreadsRequest": true,
    "supportsSetExpression": true,
    "supportsTerminateRequest": true,
    "supportsDataBreakpoints": false,
    "supportsReadMemoryRequest": true,
    "supportsWriteMemoryRequest": true,
    "supportsDisassembleRequest": true,
    "supportsSteppingGranularity": true,
    "supportsInstructionBreakpoints": true
  }
}

## 3. Launch Request
VSCode -> Debugger:
{
  "seq": 2,
  "type": "request",
  "command": "launch",
  "arguments": {
    "type": "cppdbg",
    "request": "launch",
    "program": "/path/to/your/program",
    "args": [],
    "stopAtEntry": false,
    "cwd": "/path/to/working/directory",
    "environment": [],
    "externalConsole": false,
    "MIMode": "gdb",
    "setupCommands": [
      {
        "description": "Enable pretty-printing for gdb",
        "text": "-enable-pretty-printing",
        "ignoreFailures": true
      }
    ],
    "preLaunchTask": "",
    "miDebuggerPath": "/usr/bin/gdb"
  }
}

## 4. Launch Response
Debugger -> VSCode:
{
  "seq": 2,
  "type": "response",
  "request_seq": 2,
  "success": true,
  "command": "launch"
}

## 5. Configuration Done Request
VSCode -> Debugger:
{
  "seq": 3,
  "type": "request",
  "command": "configurationDone"
}

## 6. Configuration Done Response
Debugger -> VSCode:
{
  "seq": 3,
  "type": "response",
  "request_seq": 3,
  "success": true,
  "command": "configurationDone"
}

## 7. Initialized Event
Debugger -> VSCode:
{
  "seq": 4,
  "type": "event",
  "event": "initialized"
}

## 8. Set Breakpoint Request
VSCode -> Debugger:
{
  "seq": 4,
  "type": "request",
  "command": "setBreakpoints",
  "arguments": {
    "source": {
      "name": "main.cpp",
      "path": "/path/to/main.cpp"
    },
    "lines": [10],
    "breakpoints": [
      {
        "line": 10
      }
    ],
    "sourceModified": false
  }
}

## 9. Set Breakpoint Response
Debugger -> VSCode:
{
  "seq": 5,
  "type": "response",
  "request_seq": 4,
  "success": true,
  "command": "setBreakpoints",
  "body": {
    "breakpoints": [
      {
        "verified": true,
        "line": 10,
        "id": 1,
        "source": {
          "name": "main.cpp",
          "path": "/path/to/main.cpp"
        }
      }
    ]
  }
}

## 10. Process Event
Debugger -> VSCode:
{
  "seq": 6,
  "type": "event",
  "event": "process",
  "body": {
    "name": "/path/to/your/program",
    "systemProcessId": 12345,
    "isLocalProcess": true,
    "startMethod": "launch"
  }
}

## 11. Thread Event
Debugger -> VSCode:
{
  "seq": 7,
  "type": "event",
  "event": "thread",
  "body": {
    "reason": "started",
    "threadId": 1
  }
}

## 12. Stopped Event (Breakpoint Hit)
Debugger -> VSCode:
{
  "seq": 8,
  "type": "event",
  "event": "stopped",
  "body": {
    "reason": "breakpoint",
    "threadId": 1,
    "preserveFocusHint": false,
    "text": "Breakpoint 1",
    "allThreadsStopped": true,
    "hitBreakpointIds": [1]
  }
}

## 13. Threads Request
VSCode -> Debugger:
{
  "seq": 5,
  "type": "request",
  "command": "threads"
}

## 14. Threads Response
Debugger -> VSCode:
{
  "seq": 9,
  "type": "response",
  "request_seq": 5,
  "success": true,
  "command": "threads",
  "body": {
    "threads": [
      {
        "id": 1,
        "name": "main"
      }
    ]
  }
}

## 15. Stack Trace Request
VSCode -> Debugger:
{
  "seq": 6,
  "type": "request",
  "command": "stackTrace",
  "arguments": {
    "threadId": 1,
    "startFrame": 0,
    "levels": 20
  }
}

## 16. Stack Trace Response
Debugger -> VSCode:
{
  "seq": 10,
  "type": "response",
  "request_seq": 6,
  "success": true,
  "command": "stackTrace",
  "body": {
    "stackFrames": [
      {
        "id": 1000,
        "name": "main",
        "source": {
          "name": "main.cpp",
          "path": "/path/to/main.cpp"
        },
        "line": 10,
        "column": 5,
        "instructionPointerReference": "0x40115c"
      }
    ],
    "totalFrames": 1
  }
}

## 17. DISASSEMBLE REQUEST (Main Event)
VSCode -> Debugger:
{
  "seq": 7,
  "type": "request",
  "command": "disassemble",
  "arguments": {
    "memoryReference": "0x40115c",
    "offset": -50,
    "instructionCount": 100,
    "resolveSymbols": true
  }
}

## 18. DISASSEMBLE RESPONSE (Main Event)
Debugger -> VSCode:
{
  "seq": 11,
  "type": "response",
  "request_seq": 7,
  "success": true,
  "command": "disassemble",
  "body": {
    "instructions": [
      {
        "address": "0x401130",
        "instruction": "push   %rbp",
        "instructionBytes": "55"
      },
      {
        "address": "0x401131",
        "instruction": "mov    %rsp,%rbp",
        "instructionBytes": "48 89 e5"
      },
      {
        "address": "0x401134",
        "instruction": "sub    $0x10,%rsp",
        "instructionBytes": "48 83 ec 10"
      },
      {
        "address": "0x401138",
        "instruction": "movl   $0x0,-0x4(%rbp)",
        "instructionBytes": "c7 45 fc 00 00 00 00"
      },
      {
        "address": "0x40113f",
        "instruction": "movl   $0xa,-0x8(%rbp)",
        "instructionBytes": "c7 45 f8 0a 00 00 00"
      },
      {
        "address": "0x401146",
        "instruction": "mov    -0x8(%rbp),%eax",
        "instructionBytes": "8b 45 f8"
      },
      {
        "address": "0x401149",
        "instruction": "add    $0x5,%eax",
        "instructionBytes": "83 c0 05"
      },
      {
        "address": "0x40114c",
        "instruction": "mov    %eax,-0x4(%rbp)",
        "instructionBytes": "89 45 fc"
      },
      {
        "address": "0x40114f",
        "instruction": "lea    0xe8a(%rip),%rdi",
        "instructionBytes": "48 8d 3d 8a 0e 00 00",
        "symbol": "main"
      },
      {
        "address": "0x401156",
        "instruction": "mov    -0x4(%rbp),%eax",
        "instructionBytes": "8b 45 fc"
      },
      {
        "address": "0x401159",
        "instruction": "mov    %eax,%esi",
        "instructionBytes": "89 c6"
      },
      {
        "address": "0x40115c",
        "instruction": "callq  0x401030 <printf@plt>",
        "instructionBytes": "e8 cf fe ff ff",
        "symbol": "printf@plt",
        "location": {
          "line": 10,
          "source": {
            "name": "main.cpp",
            "path": "/path/to/main.cpp"
          }
        }
      },
      {
        "address": "0x401161",
        "instruction": "mov    $0x0,%eax",
        "instructionBytes": "b8 00 00 00 00"
      },
      {
        "address": "0x401166",
        "instruction": "leaveq",
        "instructionBytes": "c9"
      },
      {
        "address": "0x401167",
        "instruction": "retq",
        "instructionBytes": "c3"
      }
    ]
  }
}

## 19. Continue Request
VSCode -> Debugger:
{
  "seq": 8,
  "type": "request",
  "command": "continue",
  "arguments": {
    "threadId": 1
  }
}

## 20. Continue Response
Debugger -> VSCode:
{
  "seq": 12,
  "type": "response",
  "request_seq": 8,
  "success": true,
  "command": "continue",
  "body": {
    "allThreadsContinued": true
  }
}

## 21. Terminated Event
Debugger -> VSCode:
{
  "seq": 13,
  "type": "event",
  "event": "terminated",
  "body": {
    "restart": false
  }
}

## 22. Disconnect Request
VSCode -> Debugger:
{
  "seq": 9,
  "type": "request",
  "command": "disconnect",
  "arguments": {
    "restart": false,
    "terminateDebuggee": true
  }
}

## 23. Disconnect Response
Debugger -> VSCode:
{
  "seq": 14,
  "type": "response",
  "request_seq": 9,
  "success": true,
  "command": "disconnect"
}
